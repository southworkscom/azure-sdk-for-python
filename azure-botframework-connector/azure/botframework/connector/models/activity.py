# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Activity(Model):
    """An Activity is the basic communication type for the Bot Framework 3.0
    protocol.

    :param type: The type of the activity. Possible values include: 'message',
     'conversationUpdate', 'contactRelationUpdate', 'typing',
     'endOfConversation', 'event', 'invoke'
    :type type: str or ~azure.botframework.connector.models.ActivityType
    :param id: ID that uniquely identifies the activity on the channel.
    :type id: str
    :param timestamp: Date and time that the message was sent in the UTC time
     zone (set by service).
    :type timestamp: datetime
    :param local_timestamp: Date and time that the message was sent in the
     local time zone (set by client).
    :type local_timestamp: datetime
    :param service_url: Service endpoint where operations concerning the
     activity may be performed.
    :type service_url: str
    :param channel_id: ID of the channel where the activity was sent.
    :type channel_id: str
    :param from_property: Sender address.
    :type from_property: ~azure.botframework.connector.models.ChannelAccount
    :param conversation: Conversation.
    :type conversation:
     ~azure.botframework.connector.models.ConversationAccount
    :param recipient: (Outbound to bot only) Bot's address that received the
     message.
    :type recipient: ~azure.botframework.connector.models.ChannelAccount
    :param text_format: Format of text fields. Default: markdown. Possible
     values include: 'markdown', 'plain', 'xml'
    :type text_format: str or ~azure.botframework.connector.models.TextFormat
    :param attachment_layout: Hint for how to deal with multiple attachments:
     [list|carousel] Default: list.
    :type attachment_layout: str
    :param members_added: Members added to the conversation. Present only if
     activity type is "conversationUpdate" and users joined the conversation.
    :type members_added:
     list[~azure.botframework.connector.models.ChannelAccount]
    :param members_removed: Members removed from the conversation. Present
     only if activity type is "conversationUpdate" and users joined the
     conversation.
    :type members_removed:
     list[~azure.botframework.connector.models.ChannelAccount]
    :param reactions_added: Reactions added to the activity.
    :type reactions_added:
     list[~azure.botframework.connector.models.MessageReaction]
    :param reactions_removed: Reactions removed from the activity.
    :type reactions_removed:
     list[~azure.botframework.connector.models.MessageReaction]
    :param topic_name: The conversation's updated topic name.
    :type topic_name: str
    :param history_disclosed: True if prior history of the channel is
     disclosed. Default value is false.
    :type history_disclosed: bool
    :param locale: Locale of the language that should be used to display text
     within the message.
    :type locale: str
    :param text: Content for the message.
    :type text: str
    :param speak: SSML Speak for TTS audio response.
    :type speak: str
    :param input_hint: Value that indicates whether your bot is accepting,
     expecting, or ignoring user input after the message is delivered to the
     client. Possible values include: 'acceptingInput', 'expectingInput',
     'ignoringInput'
    :type input_hint: str or ~azure.botframework.connector.models.InputHint
    :param summary: Text to display if the channel cannot render cards.
    :type summary: str
    :param suggested_actions: SuggestedActions are used to provide
     keyboard/quick-reply like behavior in many clients.
    :type suggested_actions:
     ~azure.botframework.connector.models.SuggestedActions
    :param attachments: Attachments.
    :type attachments: list[~azure.botframework.connector.models.Attachment]
    :param entities: Collection of Entity objects, each of which contains
     metadata about this activity. Each Entity object is typed.
    :type entities: list[~azure.botframework.connector.models.Entity]
    :param channel_data: Channel-specific payload.
    :type channel_data: object
    :param action: The action to apply or that was applied.
     Use the type property to determine context for the action. For example, if
     type is contactRelationUpdate, the value of the action property would be
     add if the user added your bot to their contacts list, or remove if they
     removed your bot from their contacts list.
    :type action: str
    :param reply_to_id: The original ID this message is a response to.
    :type reply_to_id: str
    :param value: Open-ended value.
    :type value: object
    :param name: Name of the operation to invoke or the name of the event.
    :type name: str
    :param relates_to: Reference to another conversation or activity.
    :type relates_to:
     ~azure.botframework.connector.models.ConversationReference
    :param code: Code indicating why the conversation has ended.
    :type code: str
    """

    _attribute_map = {
        'type': {'key': 'type', 'type': 'ActivityType'},
        'id': {'key': 'id', 'type': 'str'},
        'timestamp': {'key': 'timestamp', 'type': 'iso-8601'},
        'local_timestamp': {'key': 'localTimestamp', 'type': 'iso-8601'},
        'service_url': {'key': 'serviceUrl', 'type': 'str'},
        'channel_id': {'key': 'channelId', 'type': 'str'},
        'from_property': {'key': 'from', 'type': 'ChannelAccount'},
        'conversation': {'key': 'conversation', 'type': 'ConversationAccount'},
        'recipient': {'key': 'recipient', 'type': 'ChannelAccount'},
        'text_format': {'key': 'textFormat', 'type': 'TextFormat'},
        'attachment_layout': {'key': 'attachmentLayout', 'type': 'str'},
        'members_added': {'key': 'membersAdded', 'type': '[ChannelAccount]'},
        'members_removed': {'key': 'membersRemoved', 'type': '[ChannelAccount]'},
        'reactions_added': {'key': 'reactionsAdded', 'type': '[MessageReaction]'},
        'reactions_removed': {'key': 'reactionsRemoved', 'type': '[MessageReaction]'},
        'topic_name': {'key': 'topicName', 'type': 'str'},
        'history_disclosed': {'key': 'historyDisclosed', 'type': 'bool'},
        'locale': {'key': 'locale', 'type': 'str'},
        'text': {'key': 'text', 'type': 'str'},
        'speak': {'key': 'speak', 'type': 'str'},
        'input_hint': {'key': 'inputHint', 'type': 'InputHint'},
        'summary': {'key': 'summary', 'type': 'str'},
        'suggested_actions': {'key': 'suggestedActions', 'type': 'SuggestedActions'},
        'attachments': {'key': 'attachments', 'type': '[Attachment]'},
        'entities': {'key': 'entities', 'type': '[Entity]'},
        'channel_data': {'key': 'channelData', 'type': 'object'},
        'action': {'key': 'action', 'type': 'str'},
        'reply_to_id': {'key': 'replyToId', 'type': 'str'},
        'value': {'key': 'value', 'type': 'object'},
        'name': {'key': 'name', 'type': 'str'},
        'relates_to': {'key': 'relatesTo', 'type': 'ConversationReference'},
        'code': {'key': 'code', 'type': 'str'},
    }

    def __init__(self, type=None, id=None, timestamp=None, local_timestamp=None, service_url=None, channel_id=None, from_property=None, conversation=None, recipient=None, text_format=None, attachment_layout=None, members_added=None, members_removed=None, reactions_added=None, reactions_removed=None, topic_name=None, history_disclosed=None, locale=None, text=None, speak=None, input_hint=None, summary=None, suggested_actions=None, attachments=None, entities=None, channel_data=None, action=None, reply_to_id=None, value=None, name=None, relates_to=None, code=None):
        super(Activity, self).__init__()
        self.type = type
        self.id = id
        self.timestamp = timestamp
        self.local_timestamp = local_timestamp
        self.service_url = service_url
        self.channel_id = channel_id
        self.from_property = from_property
        self.conversation = conversation
        self.recipient = recipient
        self.text_format = text_format
        self.attachment_layout = attachment_layout
        self.members_added = members_added
        self.members_removed = members_removed
        self.reactions_added = reactions_added
        self.reactions_removed = reactions_removed
        self.topic_name = topic_name
        self.history_disclosed = history_disclosed
        self.locale = locale
        self.text = text
        self.speak = speak
        self.input_hint = input_hint
        self.summary = summary
        self.suggested_actions = suggested_actions
        self.attachments = attachments
        self.entities = entities
        self.channel_data = channel_data
        self.action = action
        self.reply_to_id = reply_to_id
        self.value = value
        self.name = name
        self.relates_to = relates_to
        self.code = code
